1.04 20.Oct 2002 Release

 - Big bug fixed in storage of variable and constraint names.
   It is unclear to be why it has worked before at all.

 - Grammar fixed, since trailing '*' expr of vexpr where not parsed.

 - Only variables that are written to the LP are written to the 
   ".tbl" file. 

 - Fixed a bug that would discard free variables with non zero costs.

 - Changed the output of the ".tbl" file. Now also the long constraint
   names are enclosed in doublequotes. 

 - New options -n cm|cn|cf that control how the constraints in the
   LPF/MPS file are named. "cm" will number them 1..n with a "c"
   in front. "cn" will use the name supplied in the subto statement
   and number them 1..n within the statement. "cf" will use the
   name of the subto, then a 1..n number like in "cm" and then append
   all the local variables from the forall statements.
   (It is open if the "f" in "cf" stands for "full" or for "fuegenschuh".)

 - Grammar changed again, to allow x/3 as shorthand for x * 1/3

 - Changed grammar again, to get rid of conflicts.

 - A union B does no longer warn about dublicate elements.
   This should also speed up oder set operations a bit.

 - The read template syntax is checked more precice.

 - Integer variables with bounds [0,1] are automatically changed
   to binary variables.

 - New function proj(set,tuple) wich projects a set to the elements
   of the tuple given. Example: 
   set A := { 1 to 9 } * { 10 to 19 } * { "A", "B" };
   set B := proj(A, <3,1>) 
   will give: <"A",1>, <"A",2"> ... <"B",9>

 - Bug fixed, dublicate constraint names now give an error message.

 - New functions log(x), ln(x) and exp(x), meaning 
   logarithm to base 10, natural logarithm and e^x.

 - It is now possible to have variables on both sides of an 
   inequality. "x[1] <= y[1]" is now supported.

 - Changed the parser to (hopefully) correct parse inequalites in
   all possible varietes. This includes nested sums and coefficents 
   at all places.

1.03 31.Jul 2002 Release

 - A division by Zero now gives an error message
   (instead of an exception or whatever)

 - It is now possible to assign a qualified set expression 
   to a set, like
   set C := <i,j> in A * B with i < j;

 - It is now possible to nest "forall" statements. This
   can vastly reduce the memory needed, because it is no
   longer neccessary to build big cross products to loop
   over them.
   So instead of 
      forall <i,j> in I * J with i < j do 
   it is possible to write
      forall <i> in I do forall <j> in J with i < j do
     
 - elems where now reused, this reduces the memory needed.

 - changed to not copy in principle const objects, this should
   have improved speed.

1.02 05.Jul 2002 Release

 - new functions FLOOR(expr) and CEIL(expr) which find the
   next integer down and up.

 - Bug fixed in MPS output that lets zimpl write BOUND lines
   for variables that are not used.

 - new flag -r that write a CPLEX branching order file (.ord).
   Two new attributes for variables: 
   "priority expr" sets the branching priority for the variable. 
   "startval expr" sets the start values for the variable

 - new function ABS(expr) that returns the absolut value of expr.

 - new function CARD(set) that computes the cardinality of a set.

 - memory leak pugged, that occured when summing over a restricted set.

 - added possiblility to initialise parameter per set element, 
   the same way as variables.

 - the row scaling factor is now also printed in the .tbl file.

 - Added "attributes" to the constraints. At the moment the following 
   are understood:
   scale : scales the constraint before writing the LP file.
      After scaling the absolut larges coefficient will be one.
   separate : Means "this constraint should be separated". 
      At the moment, such constraints are written in an "User constraint"
      section in the LP-File. But CPlex does not recognise this.      

 - "sum" is now also valid for expressions without variables.

 - Fixed error in LPF Writing Routine, that would write "Inf"
   instead of "+Inf".

 - Wrong template in read now gives an error message instead of
   an segment violation.

1.01 30.Oct 2001 Bug fix release

 - Added several missing const's to the code.

 - Unterminated string constants where not reported as errors.
   This led to very irritating behavior. Fixed.

 - Since it is possible that string type set members include spaces,
   the "real" name in the .tbl file is now surrounded by doublequotes.
   (I am not totally sure this is a good idea. Maybe I should just,
   change all spaces to underscores.)

 - It is now possible to write -x[3] in a constraint. Before
   it was neccessary to write -1*x[3].

 - Changed the field splitting for the read statement. The FS
   keyword is gone. Read now tries to do the "right" thing.
   Look at the documentation for details.

 - When writing LP-format files, one's as coefficents are 
   no longer written. This makes the files somewhat shorter.

 - -d (Debug) Option is no longer be ignored.

 - Default field separators for the read statement are 
   now <space>, <;> and <tab> (<tab> is new).

 - Fixed one minor malloc error with the include statement.

 - Removed all uses of alloca() for better AIX compatibility.

 - String valued parameters now work.

1.00 09.Oct 2001 Initial release


